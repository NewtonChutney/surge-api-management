name: Build Rust bin, TF init resources, Deploy Function

on:
  push:
  # pull_request:
  workflow_dispatch: 

env:
  CARGO_TERM_COLOR: always
  AZURE_FUNCTIONAPP_NAME: rust-trigger
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "."
  AZURE_FUNCTIONAPP_GROUP: "rust-trigger-rg"
  ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

jobs:
  build-rust-bin:
    runs-on: ubuntu-latest
    env:
      # Job level env vars
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: rustup add musl target
        run: rustup target add x86_64-unknown-linux-musl
      
      - name: setup npm func coretools
        run: npm install -g azure-functions-core-tools@4

      # - uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.cargo/bin/
      #       ~/.cargo/registry/index/
      #       ~/.cargo/registry/cache/
      #       ~/.cargo/git/db/
      #       target/
      #     key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache rust build deps
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release

      - name: Copy bin
        run: | 
          cp ./target/x86_64-unknown-linux-musl/release/handler .
        # cargo clean

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: setup function using tf
        uses: hashicorp/setup-terraform@v3

      - name: Initialize Terraform
        working-directory: terraform
        run: terraform init

      - name: Validate Terraform
        working-directory: terraform
        run: terraform validate

      - name: Apply Terraform
        working-directory: terraform
        run: terraform apply -auto-approve

      - name: deploy func app
        run: func azure functionapp publish rust-trigger --custom
